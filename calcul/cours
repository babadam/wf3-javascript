fonctions
---déclaration
function myFunction(myArg1, myArg2){
    instructions qui vont être exécutées à l'appel de la fonction
}

deuxième façon de déclarer une fonction
var myFunction = function(myArg1, myArg2){}


---appel
    myFunction (2,56)

return
function retourning(){
    return "bonjour";
}
// on stocke la valeur de retour de la fonction returning dans la varriable myVAr
var myVar = retourning();

//ex:
function calculate (value1, value2){
    return value1 + value2;
}
result1 = calculate(1, 7);
result2 = calculate(13, 7);

alert(result1);


function calculate(number-1, number-2){
    var result= number-1 + number-2
}


-
---LES CONDITIONS---

if (){
    si mes instructions sont vraies alors j'exécute les instructions ici
}
si la condition est fausse on passe après l'accolade et on passe à la suite


si nous avons plusieurs cas on utilise else :
if (){
    si mes instructions sont vraies alors j'exécute les instructions ici
}else{
    on éxécute ces instructions là
}


si vous on vérifie pluscieurs cas possible else if ( ajouter des conditoins supplémentaire)
if(conditions1){
    si conditions1 respectées alors instructions / si pas respétées passe au else if
}else if (condition2){
    instructions si les conditions1 ne sont pas respéctés ET que les conditions2 sont réspectées
}
on peut ajouter un:
else{
    instruction si conditions1 et conditions2 fausses alors on veut une autre instruction mais qui est sans condition
}


--- OPERATEUR DE COMPARAISON ----

< : inferieur; > : supérieur
<= : inférieur ou égal ; >= supérieur ou égam
ex: 0 < 21 : True
    0 < 0 : False
    0 > -7 : True
    0 > 21 : False
    0 > 0 : False
    0 <= 0 ou 0 >= 0 : True

== pour vérifier que deux valeurs sont égales ils faut mettre deux signes ==
1 == 1 : true
1 == 0 : renvoie false
1 == "1" : true

=== (égalité stricte : on vérifie le type également)
1 === 1 : true
1 === "1" : false
1.0 === 1 : true ne différencie pas float(décimal) différend integer(entier)

!= opérateur d'inégalité
1 != 1 : false
1 != 0 : true
1 != "1" : false (vérifie que la valeur)

!== inégalité stricte
1 !== 1 : false
1 !== 0 : true
1 !== 1.0 : false (ils sont différents en type )

pour vérifier le type de donnée "typeof"
typeof 1 : "number"
typeof "bonjour" : string
typeof myVar : undefined ( la variable est vide ou non définie)


--- OPERATEURS LOGIQUES ---
deux opérateurs qui permmettent de combiner deux conditions au sein d'une condition IF

&& : vérifie deux condtions
ex : if (condition1 && condition2){
    les instructions s'éxécutent si les deux conditions renvoient TRUE
}

|| : code s'éxécute si au moins une des deux conditions est vraies
ex : if (condition1 || condition2){
    instructions éxécutées si au moins une des deux conditions renvoie true
}

&& et || :
ex: if((conditions1 || condition2 ) && (conditions3 || conditions4)){ on résout les conditions entre paratheses d'abord
    si condi1 et/ou condi2 renvoient true Et condi3 et/ou condition4 renvoient true
}

! :
if(!condition){
    s'éxécute si condition est false
}
if (condition == false){}
if (condition != true){} C'est trois conditions sont les mêmes

if(!(condition1 || conditiond2)){
    si aucune des conditions n'est true
}

--- INCREMENTATION ---

var i = 0;
i = i + 1; // i=1
i += 1; // i=2
i ++; // i=3
i += 2; // i=5

i= i-1; // 4
i -= 1; // 3
i --; //2

i *= 2; //4
i /= 2; //2

i %=3; //2


--- LES CONDITIONS ----
var j = 0
while (j<10){ // tant que j est inférieur à 10
    j++; // j'incrémente j de 1
}


for(i = 0; i < 10; i++){

}

var myArr = ["chat", "cheval", "lion", "tigre"];
for (item in myArr){ //pour chaqque objet à l'intérieur du tableau
    alert(myArr[item]);
}

var myObject = {"nom" : "Tousverts", "prenom" : "Barbara"};
for (property in myObject){ //pour chaque propriété de l'objet
    alert(property); // affiche le nom de la propriété
    alert(myObject[property]); //affiche la valeur de la propriété
}

for (i=0; i < myArr.lenght; i++){ // pour chaque entrée dans le tableau myArr
    alert(myArr[i]);
}

SWITCH = compare une égalité

var word="pomme";
switch (word) { // on test la valeur de word
    case "banane" : // reviens à faire if(word == banane)
    break;
    case "pomme" :
    break;
    default : //cas par défaut (else)
    break;
}

SCOPE ---
Portée des variables / fonctions
scope : window

var myVar; // variable globale : accessible dans toute la page

function myFunc (arg) { // fonction globale (arg est locale à la fonction)
    var var2; // variable locale : accessible uniquement dans la fonction
    var3; // variable globale
}
//////////////////////

var myString ="test";

function myFunc (myString) {
    alert(myString);
}

myFunc ("pomme"); // alert "pomme"

function func2 (){
    var myString = "retest";
    alert(window.myString); // correspond à la variable globale ("test")
    alert(myString); // correspond à la variable locale ("retest")
}
